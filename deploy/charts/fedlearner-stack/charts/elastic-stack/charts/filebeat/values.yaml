image:
  repository: registry.cn-beijing.aliyuncs.com/fedlearner/filebeat
  tag: 7.10.0
  pullPolicy: IfNotPresent

config:
  filebeat.config:
    modules:
      path: ${path.config}/modules.d/*.yml
      # Reload module configs as they change:
      reload.enabled: false

  processors:
  - drop_fields:
      fields:
      - "agent.ephemeral_id"
      - "agent.hostname"
      - "agent.id"
      - "agent.type"
      - "agent.version"
      - "ecs.version"
      - "agent"
      - "ecs"
  - include_fields:
      when.not:
        has_fields: [ "index_type__" ]
      fields:
      - "host.name"
      - "input.type"
      - "kubernetes.container.name"
      - "kubernetes.namespace"
      - "kubernetes.node.name"
      - "kubernetes.pod.name"
      - "kubernetes.pod.uid"
      - "log.file.path"
      - "log.offset"
      - "message"
      - "stream"

  filebeat.inputs:
  - type: log
    enabled: true
    paths:
    - /var/log/*.log
    - /var/log/messages
    - /var/log/syslog
  - type: docker
    containers.ids:
    - "*"
    exclude_lines: [ '"index_type__":' ]
    processors:
    - add_kubernetes_metadata:
        in_cluster: true
    - drop_event:
        when:
          equals:
            kubernetes.container.name: filebeat
  - type: docker
    containers.ids:
    - "*"
    processors:
    - include_fields:
        fields: [ "index_type__", "name", "value", "tags" ]
    json.keys_under_root: true
    json.overwrite_keys: true
    json.ignore_decoding_error: true
    # for containerd log
  - type: log
    enabled: true
    paths:
      - /var/log/pods/*/*/*.log
    processors:
      - script:
          lang: javascript
          source: >
            function process(event){
                var path = event.Get('log.file.path');
                path = path.split('/');
                var compath = path[4];
                compath = compath.split('_')
                event.Put('kubernetes.namespace', compath[0]);
                event.Put('kubernetes.pod.name', compath[1]);
                event.Put('kubernetes.container.name', path[5]);
                var message = event.Get('message');
                var parts = message.split(' ');
                if (parts.length > 1 && (parts[1] == 'stdout' || parts[1] == 'stderr')) {
                  event.Put('stream', parts[1])
                }
            }

  output.elasticsearch:
    hosts: [ "http://fedlearner-stack-elasticsearch-client:9200" ]
    username: elastic
    password: ""
    indices:
    - index: "data_join"
      when.equals:
        index_type__: "data_join"
    - index: "raw_data"
      when.equals:
        index_type__: "raw_data"
    - index: "metrics_v2"
      when.equals:
        index_type__: "metrics"
    - index: "filebeat-7.10.0"

  # When a key contains a period, use this format for setting values on the command line:
  # --set config."http\.enabled"=true
  http.enabled: true
  http.port: 5066

# If overrideConfig is not empty, filebeat chart's default config won't be used at all.
overrideConfig: {}

# Path on the host to mount to /usr/share/filebeat/data in the container.
data:
  hostPath: /var/lib/filebeat

# Upload index template to Elasticsearch if Logstash output is enabled
# https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-template.html
# List of Elasticsearch hosts
indexTemplateLoad: []
  # - elasticsearch:9200

# List of beat plugins
plugins: []
  # - kinesis.so

# pass custom command. This is equivalent of Entrypoint in docker
command: []

# pass custom args. This is equivalent of Cmd in docker
args: []

# A list of additional environment variables
extraVars: []
  # - name: TEST1
  #   value: TEST2
  # - name: TEST3
  #   valueFrom:
  #     configMapKeyRef:
  #       name: configmap
  #       key: config.key

# Add additional volumes and mounts, for example to read other log files on the host
extraVolumes: []
  # - hostPath:
  #     path: /var/log
  #   name: varlog
extraVolumeMounts: []
  # - name: varlog
  #   mountPath: /host/var/log
  #   readOnly: true
extraSecrets: {}
  # secret: "TEST1"

extraInitContainers: []
  # - name: echo
  #   image: busybox
  #   imagePullPolicy: Always
  #   args:
  #     - echo
  #     - hello

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 200Mi
  # requests:
  #  cpu: 100m
  #  memory: 100Mi

priorityClassName: ""

nodeSelector: {}

annotations: {}

tolerations: []
  # - operator: Exists

affinity: {}

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

## Specify if a Pod Security Policy for filebeat must be created
## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
##
podSecurityPolicy:
  enabled: False
  annotations: {}
    ## Specify pod annotations
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp
    ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#sysctl
    ##
    # seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
    # seccomp.security.alpha.kubernetes.io/defaultProfileName: 'docker/default'
    # apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'

privileged: false

## Add Elastic beat-exporter for Prometheus
## https://github.com/trustpilot/beat-exporter
## Dont forget to enable http on config.http.enabled (exposing filebeat stats)
monitoring:
  enabled: true
  serviceMonitor:
    # When set true and if Prometheus Operator is installed then use a ServiceMonitor to configure scraping
    enabled: true
    # Set the namespace the ServiceMonitor should be deployed
    # namespace: monitoring
    # Set how frequently Prometheus should scrape
    # interval: 30s
    # Set path to beats-exporter telemtery-path
    # telemetryPath: /metrics
    # Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator
    # labels:
  image:
    repository: trustpilot/beat-exporter
    tag: 0.1.1
    pullPolicy: IfNotPresent
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 200Mi
  # requests:
  #  cpu: 100m
  #  memory: 100Mi

  # pass custom args. This is equivalent of Cmd in docker
  args: []

  ## default is ":9479". If changed, need pass argument "-web.listen-address <...>"
  exporterPort: 9479
  ## Filebeat service port, which exposes Prometheus metrics
  targetPort: 9479
