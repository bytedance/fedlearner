/* Copyright 2023 The FedLearner Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package pp_lite.proto;
import "pp_lite/proto/common.proto";
import "google/protobuf/empty.proto";

message GetPartitionNumberResponse {
  int64 partition_num = 1;
}

message GetSignedIdsRequest {
  repeated int64 partition_ids = 1;
}

message GetSignedIdsResponse {
  repeated string ids = 1;
}

message PublicKeyResponse {
  string e = 1;
  string n = 2;
}

message SignRequest {
  repeated string ids = 1;
}

message SignResponse {
  repeated string signed_ids = 1;
}

message SyncDataJoinResultRequest {
  int64 partition_id = 1;
  repeated string ids = 2;
}

message SyncDataJoinResultResponse {
  bool succeeded = 1;
}

service DataJoinService {
  rpc Sign(SignRequest) returns (SignResponse) {}
  rpc Finish(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc GetPublicKey(google.protobuf.Empty) returns (PublicKeyResponse) {}
  rpc GetSignedIds(GetSignedIdsRequest) returns (stream GetSignedIdsResponse) {}
  rpc GetPartitionNumber(google.protobuf.Empty) returns (GetPartitionNumberResponse) {}
  rpc SyncDataJoinResult(stream SyncDataJoinResultRequest) returns (SyncDataJoinResultResponse) {}
  rpc HealthCheck(Ping) returns (Pong) {}
}