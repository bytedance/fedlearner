/* Copyright 2023 The FedLearner Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package pp_lite.proto;
import "pp_lite/proto/common.proto";
import "google/protobuf/empty.proto";

message CreateDataJoinRequest {
  DataJoinType type = 1;
  int64 partition_id = 2;
}

message CreateDataJoinResponse {
  bool succeeded = 1;
  bool empty = 2;
}

message VerifyParameterRequest {
  int64 num_partitions = 1;
  int64 num_workers = 2;
}

message VerifyParameterResponse {
  bool succeeded = 1;
  int64 num_partitions = 2;
  int64 num_workers = 3;
}

message GetParameterRequest {
  string message = 1;
}

message GetParameterResponse {
  int64 num_partitions = 1;
  int64 num_workers = 2;
}

message GetDataJoinResultRequest {
  int64 partition_id = 1;
}

message DataJoinResult {
  int64 num_joined = 1;
  bool finished = 2;
}

service DataJoinControlService {
  rpc HealthCheck(Ping) returns (Pong) {}
  rpc VerifyParameter(VerifyParameterRequest) returns (VerifyParameterResponse) {}
  rpc GetParameter(GetParameterRequest) returns (GetParameterResponse) {}
  rpc CreateDataJoin(CreateDataJoinRequest) returns (CreateDataJoinResponse) {}
  rpc GetDataJoinResult(GetDataJoinResultRequest) returns (DataJoinResult) {}
  rpc Finish(google.protobuf.Empty) returns (google.protobuf.Empty) {}
}