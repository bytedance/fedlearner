{
    "comment": "",
    "config": {
        "group_alias": "sys_preset_data_alignment",
        "job_definitions": [
            {
                "dependencies": [],
                "easy_mode": false,
                "is_federated": false,
                "job_type": "TRANSFORMER",
                "name": "alignment-job",
                "variables": [],
                "yaml_template": "{\n    \"apiVersion\": \"sparkoperator.k8s.io/v1beta2\",\n    \"kind\": \"SparkApplication\",\n    \"metadata\": {\n        \"name\": self.name,\n        \"namespace\": system.variables.namespace,\n        \"labels\": dict(system.variables.labels),\n        \"annotations\": {\n            \"queue\": \"fedlearner-spark\",\n            \"schedulerName\": \"batch\",\n        },\n    },\n    \"spec\": {\n        \"type\": \"Python\",\n        \"pythonVersion\": \"3\",\n        \"mode\": \"cluster\",\n        \"image\": (system.variables.get(\"spark_image_repo\") or str(system.variables.image_repo + \"/pp_data_inspection\")) + \":\" + system.version,\n        \"imagePullPolicy\": \"IfNotPresent\",\n        \"volumes\": list(system.variables.volumes_list),\n        \"mainApplicationFile\": \"/opt/spark/work-dir/dataset_alignment.py\",\n        \"arguments\": [\n            \"--input_dataset_path=\" + workflow.variables.input_dataset_path,\n            \"--input_batch_path=\" + workflow.variables.input_batch_path,\n            \"--json_schema=\" + workflow.variables.json_schema,\n            \"--wildcard=\" + workflow.variables.wildcard,\n            \"--output_dataset_path=\" + workflow.variables.output_dataset_path,\n            \"--output_batch_path=\" + workflow.variables.output_batch_path,\n            \"--output_error_path=\" + workflow.variables.output_dataset_path + \"/errors\",\n        ],\n        \"sparkVersion\": \"3.0.0\",\n        \"restartPolicy\": {\n            \"type\": \"OnFailure\",\n            \"onFailureRetries\": 3,\n            \"onFailureRetryInterval\": 10,\n            \"onSubmissionFailureRetries\": 5,\n            \"onSubmissionFailureRetryInterval\": 20\n        },\n        \"driver\": {\n            \"cores\": int(workflow.variables.driver_cores),\n            \"coreLimit\": workflow.variables.driver_cores_limit,\n            \"memory\": workflow.variables.driver_mem,\n            \"labels\": {\n                \"version\": \"3.0.0\"\n            },\n            \"serviceAccount\": \"spark\",\n            \"volumeMounts\": list(system.variables.volume_mounts_list),\n            \"env\": system.variables.envs_list + []\n\n        },\n        \"executor\": {\n            \"cores\": int(workflow.variables.executor_cores),\n            \"instances\": int(workflow.variables.initial_executors),\n            \"memory\": workflow.variables.executor_mem,\n            \"labels\": {\n                \"version\": \"3.0.0\"\n            },\n            \"volumeMounts\": list(system.variables.volume_mounts_list),\n            \"env\": system.variables.envs_list + []\n        },\n        \"dynamicAllocation\": {\n            \"enabled\": True,\n            \"initialExecutors\": int(workflow.variables.initial_executors),\n            \"maxExecutors\": int(workflow.variables.max_executors),\n            \"minExecutors\": int(workflow.variables.min_executors)\n        }\n    }\n}\n"
            },
            {
                "dependencies": [
                    {
                        "source": "alignment-job"
                    }
                ],
                "easy_mode": false,
                "is_federated": false,
                "job_type": "ANALYZER",
                "name": "analyzer",
                "variables": [],
                "yaml_template": "{\n    \"apiVersion\": \"sparkoperator.k8s.io/v1beta2\",\n    \"kind\": \"SparkApplication\",\n    \"metadata\": {\n        \"name\": self.name,\n        \"namespace\": system.variables.namespace,\n        \"labels\": dict(system.variables.labels),\n        \"annotations\": {\n            \"queue\": \"fedlearner-spark\",\n            \"schedulerName\": \"batch\",\n        },\n    },\n    \"spec\": {\n        \"type\": \"Python\",\n        \"pythonVersion\": \"3\",\n        \"mode\": \"cluster\",\n        \"image\": (system.variables.get(\"spark_image_repo\") or str(system.variables.image_repo + \"/pp_data_inspection\")) + \":\" + system.version,\n        \"imagePullPolicy\": \"IfNotPresent\",\n        \"volumes\": list(system.variables.volumes_list),\n        \"mainApplicationFile\": \"/opt/spark/work-dir/analyzer_v2.py\",\n        \"arguments\": [\n            workflow.variables.data_type,\n            \"--data_path=\" + workflow.variables.output_dataset_path,\n            \"--file_wildcard=\" + \"batch/**/**\",\n            \"--buckets_num=\" + workflow.variables.buckets_num,\n            \"--thumbnail_path=\" + workflow.variables.thumbnail_path,\n            \"--batch_name=\" + str(workflow.variables.output_batch_name),\n        ],\n        \"sparkVersion\": \"3.0.0\",\n        \"restartPolicy\": {\n            \"type\": \"OnFailure\",\n            \"onFailureRetries\": 3,\n            \"onFailureRetryInterval\": 10,\n            \"onSubmissionFailureRetries\": 5,\n            \"onSubmissionFailureRetryInterval\": 20\n        },\n        \"driver\": {\n            \"cores\": 1,\n            \"coreLimit\": \"1200m\",\n            \"memory\": \"4g\",\n            \"labels\": {\n                \"version\": \"3.0.0\"\n            },\n            \"serviceAccount\": \"spark\",\n            \"volumeMounts\": list(system.variables.volume_mounts_list),\n            \"env\": system.variables.envs_list\n        },\n        \"executor\": {\n            \"cores\": 2,\n            \"instances\": 2,\n            \"memory\": \"4g\",\n            \"labels\": {\n                \"version\": \"3.0.0\"\n            },\n            \"volumeMounts\": list(system.variables.volume_mounts_list),\n            \"env\": system.variables.envs_list\n        },\n        \"dynamicAllocation\": {\n            \"enabled\": True,\n            \"initialExecutors\": 2,\n            \"maxExecutors\": 64,\n            \"minExecutors\": 2,\n        }\n    }\n}\n"
            }
        ],
        "variables": [
            {
                "access_mode": "PEER_READABLE",
                "name": "buckets_num",
                "tag": "OPERATING_PARAM",
                "typed_value": "10",
                "value": "10",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"hidden\":true,\"tag\":\"OPERATING_PARAM\"}"
            },
            {
                "access_mode": "PEER_READABLE",
                "name": "thumbnail_path",
                "tag": "INPUT_PATH",
                "typed_value": "",
                "value": "",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"tag\":\"INPUT_PATH\"}"
            },
            {
                "access_mode": "PEER_READABLE",
                "name": "input_dataset_path",
                "tag": "INPUT_PATH",
                "typed_value": "",
                "value": "",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"hidden\":true,\"tag\":\"INPUT_PATH\"}"
            },
            {
                "access_mode": "PEER_READABLE",
                "name": "input_batch_path",
                "tag": "INPUT_PATH",
                "typed_value": "",
                "value": "",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"hidden\":true,\"tag\":\"INPUT_PATH\"}"
            },
            {
                "access_mode": "PEER_READABLE",
                "name": "output_dataset_path",
                "tag": "OUTPUT_PATH",
                "typed_value": "",
                "value": "",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"hidden\":true,\"tag\":\"OUTPUT_PATH\"}"
            },
            {
                "access_mode": "PEER_READABLE",
                "name": "output_batch_path",
                "tag": "OUTPUT_PATH",
                "typed_value": "",
                "value": "",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"hidden\":true,\"tag\":\"OUTPUT_PATH\"}"
            },
            {
                "access_mode": "PEER_READABLE",
                "name": "data_type",
                "tag": "OPERATING_PARAM",
                "typed_value": "tabular",
                "value": "tabular",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"tag\":\"OPERATING_PARAM\"}"
            },
            {
                "access_mode": "PEER_READABLE",
                "name": "wildcard",
                "tag": "INPUT_PATH",
                "typed_value": "**",
                "value": "**",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"hidden\":true,\"tag\":\"INPUT_PATH\"}"
            },
            {
                "access_mode": "PEER_READABLE",
                "name": "json_schema",
                "tag": "OPERATING_PARAM",
                "typed_value": "",
                "value": "",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"hidden\":true,\"tag\":\"OPERATING_PARAM\"}"
            },
            {
                "access_mode": "PEER_WRITABLE",
                "name": "driver_cores",
                "tag": "RESOURCE_ALLOCATION",
                "typed_value": "1",
                "value": "1",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"tag\":\"RESOURCE_ALLOCATION\"}"
            },
            {
                "access_mode": "PEER_WRITABLE",
                "name": "driver_cores_limit",
                "tag": "RESOURCE_ALLOCATION",
                "typed_value": "4000m",
                "value": "4000m",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"tag\":\"RESOURCE_ALLOCATION\"}"
            },
            {
                "access_mode": "PEER_WRITABLE",
                "name": "driver_mem",
                "tag": "RESOURCE_ALLOCATION",
                "typed_value": "4g",
                "value": "4g",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"tag\":\"RESOURCE_ALLOCATION\"}"
            },
            {
                "access_mode": "PEER_WRITABLE",
                "name": "executor_cores",
                "tag": "RESOURCE_ALLOCATION",
                "typed_value": "2",
                "value": "2",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"tag\":\"RESOURCE_ALLOCATION\"}"
            },
            {
                "access_mode": "PEER_WRITABLE",
                "name": "executor_mem",
                "tag": "RESOURCE_ALLOCATION",
                "typed_value": "4g",
                "value": "4g",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"tag\":\"RESOURCE_ALLOCATION\"}"
            },
            {
                "access_mode": "PEER_WRITABLE",
                "name": "initial_executors",
                "tag": "RESOURCE_ALLOCATION",
                "typed_value": "2",
                "value": "2",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"tag\":\"RESOURCE_ALLOCATION\"}"
            },
            {
                "access_mode": "PEER_WRITABLE",
                "name": "max_executors",
                "tag": "RESOURCE_ALLOCATION",
                "typed_value": "128",
                "value": "128",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"tag\":\"RESOURCE_ALLOCATION\"}"
            },
            {
                "access_mode": "PEER_WRITABLE",
                "name": "min_executors",
                "tag": "RESOURCE_ALLOCATION",
                "typed_value": "2",
                "value": "2",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"tag\":\"RESOURCE_ALLOCATION\"}"
            },
            {
                "access_mode": "PEER_WRITABLE",
                "name": "output_batch_name",
                "tag": "OUTPUT_PATH",
                "typed_value": "",
                "value": "",
                "value_type": "STRING",
                "widget_schema": "{\"component\":\"Input\",\"required\":true,\"tag\":\"OUTPUT_PATH\",\"hidden\":true}"
            }
        ]
    },
    "editor_info": {},
    "name": "sys-preset-alignment-task"
}