/* Copyright 2020 The FedLearner Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

import "fedlearner_webconsole/proto/common.proto";
import "fedlearner_webconsole/proto/workflow_definition.proto";
package fedlearner_webconsole.proto;


message ProjAuthInfo {
    string project_name = 1;
    string source_domain = 2;
    string target_domain = 3;
    string auth_token = 4;
}
message JobDetail{
    enum JobState {
        UNSPECIFIED = 0;
        READY = 1;
        STARTED = 2;
        STOPPED = 3;

    }
    string job_name = 1;
    JobState job_state = 2;
}

message CheckConnectionRequest {
    ProjAuthInfo auth_info = 1;
}

message CheckConnectionResponse {
    Status status = 1;
}

message UpdateWorkflowStateRequest {
    ProjAuthInfo auth_info = 1;
    string workflow_name = 2;
    int64 state = 3;
    int64 target_state = 4;
    int64 transaction_state = 5;
}

message UpdateWorkflowStateResponse {
    Status status = 1;
    int64 transaction_state = 2;
}

message GetWorkflowRequest {
    ProjAuthInfo auth_info = 1;
    string workflow_name = 2;
}
message GetWorkflowResponse{
    Status status = 1;
    int64 state = 2;
    bool forkable = 3;
    WorkflowDefinition config = 4;
    repeated JobDetail jobs = 5;
}


service WebConsoleV2Service {
    rpc CheckConnection (CheckConnectionRequest) returns (CheckConnectionResponse) {}
    rpc UpdateWorkflowState (UpdateWorkflowStateRequest) returns (UpdateWorkflowStateResponse) {}
    rpc GetWorkflow (GetWorkflowRequest) returns (GetWorkflowResponse) {}
}
