/* Copyright 2023 The FedLearner Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
import "google/protobuf/struct.proto";
import "fedlearner_webconsole/proto/algorithm.proto";
package fedlearner_webconsole.proto;

enum StatusCode {
  STATUS_SUCCESS = 0;
  STATUS_UNKNOWN_ERROR = 1;
  STATUS_UNAUTHORIZED = 2;
  STATUS_NOT_FOUND = 3;
  STATUS_INVALID_ARGUMENT = 4;
}

message Status {
  StatusCode code = 1;
  string msg = 2;
}

message Variable {
  enum AccessMode {
    UNSPECIFIED = 0;
    PRIVATE = 1;
    PEER_READABLE = 2;
    PEER_WRITABLE = 3;
  }
  enum ValueType {
    STRING = 0;
    CODE = 1;
    NUMBER = 2;
    LIST = 3;
    OBJECT = 4;
    BOOL = 5;
  }
  string name = 1;
  string value = 2 [deprecated = true];

  AccessMode access_mode = 3;
  string widget_schema = 4;
  ValueType value_type = 5;

  google.protobuf.Value typed_value = 6;

  // used for frontend to group variables
  string tag = 7;

}

message GrpcSpec {
  reserved 2;
  string authority = 1;
}

enum MethodType{
    CREATE = 0;
    UPDATE = 1;
    FORK = 2;
}

enum WorkflowStatus{
    UNSPECIFIED = 0;
    CREATE_SENDER_PREPARE = 1;
    CREATE_RECEIVER_PREPARE = 2;
    CREATE_SENDER_COMMITTABLE = 3;
    CREATE_RECEIVER_COMMITTABLE = 4;
    CREATED = 5;
    FORK_SENDER = 6;
}

enum CreateJobFlag {
    INVALID = 0;
    NEW = 1;
    REUSE = 2;
    DISABLED = 3;
}

// Message representing the set of files uploaded to fedlearner.
message UploadedFiles {
  repeated UploadedFile uploaded_files = 1;
}

// Message representing the file uploaded to fedlearner.
message UploadedFile {
  // File display name with folder displayed in code editor. folders are
  // included as part of file name. Examples:
  // "test/test.py".
  // "syslib.bin"
  string display_file_name = 1;

  // Internal store location for uploaded file.
  string internal_path = 2;

  // File content that will be visible and editable for users.
  // Applicable only to human-readable text files.
  string content = 3;

  // Internal store parent directory for upload file.
  string internal_directory = 4;
}

message ApplicationVersion {
    // Release time, e.g. Fri Jul 16 12:23:19 CST 2021
    string pub_date = 1;
    // Hash of the image, e.g. f09d681b4eda01f053cc1a645fa6fc0775852a48
    string revision = 2;
    // Corresponding branch name on gitlab, e.g. release-2.0.1
    string branch_name = 3;
    // Version number, e.g. 2.0.1.5
    string version = 4;
}

enum PayloadType {
  ALGORITHM = 0;
}

message Payload {
  oneof data {
    AlgorithmData algorithm_data = 1;
  }
}
