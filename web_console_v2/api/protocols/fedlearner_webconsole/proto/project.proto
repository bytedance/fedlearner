/* Copyright 2023 The FedLearner Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

import "fedlearner_webconsole/proto/common.proto";
import "fedlearner_webconsole/proto/participant.proto";

package fedlearner_webconsole.proto;

message ProjectRef {
    int64 id = 1;
    string name = 2;
    string participant_type = 3;
    // Username of creator
    string creator = 4;
    // Timestamp in seconds
    int64 created_at = 5;
    // Related workflow count in the project
    int64 num_workflow = 6;
    // NOTE: this kind of proto should not be added into Ref proto,
    // this is not a good practice, but we need this for compatible reason.
    repeated Participant participants = 7;
    ParticipantsInfo participants_info = 8;
    // ref: ProjectRole
    string role = 9;
}

message Project {
    int64 id = 1;
    string name = 2;
    string token = 3;
    string comment = 4;
    string participant_type = 5;
    // Username of creator
    string creator = 6;
    // Timestamp in seconds
    int64 created_at = 7;
    // Timestamp in seconds
    int64 updated_at = 8;
    repeated Variable variables = 9;
    repeated Participant participants = 10;
    ParticipantsInfo participants_info = 11;
    ProjectConfig config = 12;
    // ref: ProjectRole
    string role = 13;
}

message ProjectConfig {
    enum ProjectAbilityType {
        ID_ALIGNMENT = 0;
        HORIZONTAL_FL = 1;
        VERTICAL_FL = 3;
        TEE = 4;
    }
    enum AuthorizationRule {
        ALWAYS_ALLOW = 0;
        ONCE = 1;
        MANUAL = 2;
        ALWAYS_REFUSE = 3;
    }
    reserved 1, 2, 3;
    repeated Variable variables = 4;
    repeated ProjectAbilityType abilities = 5;
    // key ref: Action
    map<string, AuthorizationRule> action_rules = 6;
    bool support_blockchain = 7;
}

message ParticipantsInfo {
    // key is the pure domain name of participant
    map<string, ParticipantInfo> participants_map = 1;
}

message ParticipantInfo {
    string name = 1;
    // ref: PendingProjectState
    string state = 2;
    // ref: ProjectRole
    string role = 3;
    // Ref to enum ParticipantType
    string type = 4;
    // ref: AuthStatus
    string auth_status = 5;
}

message PendingProjectPb {
    int64 id = 1;
    string name = 2;
    string uuid = 3;
    ProjectConfig config = 4;
    // ref: PendingProjectState
    string state = 5;
    ParticipantsInfo participants_info = 6;
    // ref: ProjectRole
    string role = 7;
    string comment = 8;
    // Username of creator
    string creator_username = 9;
    // Timestamp in seconds
    int64 created_at = 10;
    // Timestamp in seconds
    int64 updated_at = 11;
    // ref: TicketStatus
    string ticket_status = 12;
    string ticket_uuid = 13;
    string participant_type = 14;
}
