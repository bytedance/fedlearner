{
  "apiVersion": "fedlearner.k8s.io/v1alpha1",
  "kind": "FLApp",
  "metadata": {
    "name": self.name,
    "namespace": system.variables.namespace,
    "annotations":{
        "queue": "fedlearner",
        "schedulerName": "batch"
    },
    "labels": ${Slot_labels}
  },
  "spec": {
    "role": ${Slot_role},
    "cleanPodPolicy": "All",
    "peerSpecs": {
      "Leader" if ${Slot_role}=="Follower" else "Follower": {
        "peerURL": "fedlearner-stack-ingress-nginx-controller.default.svc:80",
        "authority": project.participants[0].egress_host,
        "extraHeaders": {
          "x-host": "fedlearner-operator." + project.participants[0].egress_domain
        }
      }
    },
    "flReplicaSpecs": {
      "Master": {
        "template": {
          "spec": {
            "restartPolicy": "Never",
            "containers": [
              {
                "env": system.basic_envs_list + [
                  {
                    "name": "STORAGE_ROOT_PATH",
                    "value": ${Slot_storage_root_path}
                  },
                  {
                    "name": "ROLE",
                    "value": ${Slot_role}.lower()
                  },
                  {
                    "name": "APPLICATION_ID",
                    "value": self.name
                  },
                  {
                    "name": "OUTPUT_BASE_DIR",
                    "value": ${Slot_storage_root_path} + "/job_output/" + self.name
                  },
                  {
                    "name": "EGRESS_URL",
                    "value": "fedlearner-stack-ingress-nginx-controller.default.svc:80"
                  },
                  {
                    "name": "EGRESS_HOST",
                    "value": project.participants[0].egress_host
                  },
                  {
                    "name": "EGRESS_DOMAIN",
                    "value": project.participants[0].egress_domain
                  },
                  {
                    "name": "EPOCH_NUM",
                    "value": str(${Slot_epoch_num})
                  },
                  {
                    "name": "START_DATE",
                    "value": str(${Slot_start_date})
                  },
                  {
                    "name": "END_DATE",
                    "value": str(${Slot_end_date})
                  },
                  {
                    "name": "DATA_SOURCE",
                    "value": ${Slot_data_source}
                  },
                  {
                    "name": "ONLINE_TRAINING",
                    "value": ${Slot_online_training}
                  },
                  {
                    "name": "SPARSE_ESTIMATOR",
                    "value": str(${Slot_sparse_estimator})
                  },
                  {
                    "name": "CODE_KEY",
                    "value": ${Slot_code_key}
                  },
                  {
                    "name": "CODE_TAR",
                    "value": ${Slot_code_tar}
                  },
                  {
                    "name": "CHECKPOINT_PATH",
                    "value": ${Slot_checkpoint_path}
                  },
                  {
                    "name": "LOAD_CHECKPOINT_FILENAME",
                    "value": ${Slot_load_checkpoint_filename}
                  },
                  {
                    "name": "LOAD_CHECKPOINT_FILENAME_WITH_PATH",
                    "value": ${Slot_load_checkpoint_filename_with_path}
                  },
                  {
                    "name": "LOAD_CHECKPOINT_PATH",
                    "value":  ${Slot_load_checkpoint_from_job} and ${Slot_storage_root_path} + "/job_output/" + ${Slot_load_checkpoint_from_job} + "/checkpoints"
                  },
                  {
                    "name": "EXPORT_PATH",
                    "value": ${Slot_export_path}
                  }
                ] + ${Slot_master_envs},
                "imagePullPolicy": "IfNotPresent",
                "name": "tensorflow",
                "volumeMounts": ${Slot_volume_mounts},
                "image": system.variables.image_repo + "/fedlearner:" + ${Slot_image_version},
                "ports": [
                  {
                    "containerPort": 50051,
                    "name": "flapp-port",
                    "protocol": "TCP"
                  }
                ],
                "command": [
        "/app/deploy/scripts/trainer/run_trainer_master.sh"
                ],
                "args": [
                ],
                "resources": {
                  "limits": {
                    "cpu": ${Slot_master_cpu},
                    "memory": ${Slot_master_memory}
                  },
                  "requests": {
                    "cpu": ${Slot_master_cpu},
                    "memory": ${Slot_master_memory}
                  }
                }
              }
            ],
            "imagePullSecrets": [
              {
                "name": "regcred"
              }
            ],
            "volumes": ${Slot_volumes}

          }
        },
        "pair": False,
        "replicas": int(${Slot_master_replicas})
      },
      "PS": {
        "template": {
          "spec": {
            "restartPolicy": "Never",
            "containers": [
              {
                "env": system.basic_envs_list + [
                  {
                    "name": "STORAGE_ROOT_PATH",
                    "value": ${Slot_storage_root_path}
                  },
                  {
                    "name": "EGRESS_URL",
                    "value": "fedlearner-stack-ingress-nginx-controller.default.svc:80"
                  },
                  {
                    "name": "EGRESS_HOST",
                    "value": project.participants[0].egress_host
                  },
                  {
                    "name": "EGRESS_DOMAIN",
                    "value": project.participants[0].egress_domain
                  }

                ] + ${Slot_ps_envs},
                "imagePullPolicy": "IfNotPresent",
                "name": "tensorflow",
                "volumeMounts": ${Slot_volume_mounts},
                "image": system.variables.image_repo + "/fedlearner:" + ${Slot_image_version},
                "ports": [
                  {
                    "containerPort": 50051,
                    "name": "flapp-port",
                    "protocol": "TCP"
                  }
                ],
                "command": [
        "/app/deploy/scripts/trainer/run_trainer_ps.sh"
                ],
                "args": [
                ],
                "resources": {
                  "limits": {
                    "cpu": ${Slot_ps_cpu},
                    "memory": ${Slot_ps_memory}
                  },
                  "requests": {
                    "cpu": ${Slot_ps_cpu},
                    "memory": ${Slot_ps_memory}
                  }
                }
              }
            ],
            "imagePullSecrets": [
              {
                "name": "regcred"
              }
            ],
            "volumes": ${Slot_volumes}
          }
        },
        "pair": False,
        "replicas": int(${Slot_ps_replicas})
      },
      "Worker": {
        "template": {
          "spec": {
            "restartPolicy": "Never",
            "containers": [
              {
                "env": system.basic_envs_list + [
                  {
                    "name": "STORAGE_ROOT_PATH",
                    "value": ${Slot_storage_root_path}
                  },
                  {
                    "name": "ROLE",
                    "value": ${Slot_role}.lower()
                  },
                  {
                    "name": "APPLICATION_ID",
                    "value": self.name
                  },
                  {
                    "name": "OUTPUT_BASE_DIR",
                    "value": ${Slot_storage_root_path} + "/job_output/" + self.name
                  },
                  {
                    "name": "EGRESS_URL",
                    "value": "fedlearner-stack-ingress-nginx-controller.default.svc:80"
                  },
                  {
                    "name": "EGRESS_HOST",
                    "value": project.participants[0].egress_host
                  },
                  {
                    "name": "EGRESS_DOMAIN",
                    "value": project.participants[0].egress_domain
                  },
                  {
                    "name": "MODE",
                    "value": ${Slot_mode}
                  },
                  {
                    "name": "VERBOSITY",
                    "value": str(${Slot_verbosity})
                  },
                  {
                    "name": "CODE_KEY",
                    "value": ${Slot_code_key}
                  },
                  {
                    "name": "CODE_TAR",
                    "value": ${Slot_code_tar}
                  },
                  {
                    "name": "SAVE_CHECKPOINT_STEPS",
                    "value": str(${Slot_save_checkpoint_steps})
                  },
                  {
                    "name": "SAVE_CHECKPOINT_SECS",
                    "value": str(${Slot_save_checkpoint_secs})
                  },
                  {
                    "name": "SPARSE_ESTIMATOR",
                    "value": str(${Slot_sparse_estimator})
                  },
                  {
                    "name": "SUMMARY_SAVE_STEPS",
                    "value": str(${Slot_summary_save_steps})
                  }
                ] + ${Slot_worker_envs},
                "imagePullPolicy": "IfNotPresent",
                "name": "tensorflow",
                "volumeMounts": ${Slot_volume_mounts},
                "image": system.variables.image_repo + "/fedlearner:" + ${Slot_image_version},
                "ports": [
                  {
                    "containerPort": 50051,
                    "name": "flapp-port",
                    "protocol": "TCP"
                  }
                ],
                "command": [
                  "/app/deploy/scripts/wait4pair_wrapper.sh"
                ],
                "args": [
                  "/app/deploy/scripts/trainer/run_trainer_worker.sh"
                ],
                "resources": {
                  "limits": {
                    "cpu": ${Slot_worker_cpu},
                    "memory": ${Slot_worker_memory}
                  },
                  "requests": {
                    "cpu": ${Slot_worker_cpu},
                    "memory": ${Slot_worker_memory}
                  }
                }
              }
            ],
            "imagePullSecrets": [
              {
                "name": "regcred"
              }
            ],
            "volumes": ${Slot_volumes}
          }
        },
        "pair": True,
        "replicas": int(${Slot_worker_replicas})
      }
    }
  }
}
