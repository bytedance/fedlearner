libos.entrypoint = "{{ entrypoint }}"
libos.check_invalid_pointers = false

loader.preload = "file:{{ gramine.libos }}"
loader.log_level = "{{ log_level }}"
# loader.log_file = ""

loader.pal_internal_mem_size = "128M"

loader.insecure__use_cmdline_argv = true 
loader.insecure__use_host_env = false

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/{{ arch_libdir }}"
loader.env.LC_ALL = "C"
loader.env.GRPC_VERBOSITY = "ERROR"

sys.enable_sigterm_injection = true
sys.stack.size = "16M"

fs.mount.lib.type = "chroot"
fs.mount.lib.path = "/lib"
fs.mount.lib.uri = "file:{{ gramine.runtimedir() }}"

fs.mount.lib2.type = "chroot"
fs.mount.lib2.path = "{{ arch_libdir }}"
fs.mount.lib2.uri = "file:{{ arch_libdir }}"

fs.mount.lib3.type = "chroot"
fs.mount.lib3.path = "/usr{{ arch_libdir }}"
fs.mount.lib3.uri = "file:/usr{{ arch_libdir }}"

fs.mount.etc.type = "chroot"
fs.mount.etc.path = "/etc"
fs.mount.etc.uri = "file:/etc"

# Note that Gramine also creates an internal
# thread for handling inter-process communication (IPC), and potentially another
# thread for asynchronous events. Therefore, the actual number of threads that
# the application can create is (sgx.thread_num - 2).

sgx.debug = false
sgx.remote_attestation = true
sgx.nonpie_binary = true

sgx.enclave_size = "2G"
sgx.thread_num = 16

# sgx.require_avx = true
# sgx.require_avx512 = true
# sgx.require_amx = true

sgx.enable_stats = false

sgx.trusted_files = [
  "file:{{ entrypoint }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr{{ arch_libdir }}/",
  "file:/etc/ssl/certs/ca-certificates.crt",
]

sgx.allowed_files = [
  "file:/usr/lib/ssl/openssl.cnf",
  "file:/etc/ld.so.conf",
  "file:/etc/gai.conf",
  "file:/etc/host.conf",
  "file:/etc/resolv.conf",
  "file:/etc/nsswitch.conf",
  "file:/etc/sgx_default_qcnl.conf",
  "file:/etc/hosts",
  "file:/etc/group",
  "file:/etc/passwd",
  "file:dynamic_config.json",
]
